<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="An Election must last at least one day and less than five days" xml:space="preserve">
    <value>An Election must last at least one day and less than five days</value>
  </data>
  <data name="An error occurred while processing your request." xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="Are you sure you want to delete this?" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Candidates" xml:space="preserve">
    <value>Candidates</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Create Election" xml:space="preserve">
    <value>Create Election</value>
  </data>
  <data name="Create New" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="CreateElectionTitle" xml:space="preserve">
    <value>Create an Election</value>
  </data>
  <data name="CreateStateTitle" xml:space="preserve">
    <value>Créer une Etat</value>
  </data>
  <data name="CreateVoterTitle" xml:space="preserve">
    <value>Create a Voter</value>
  </data>
  <data name="Current Election" xml:space="preserve">
    <value>Current Election</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete Election" xml:space="preserve">
    <value>Delete Election</value>
  </data>
  <data name="Delete Voter" xml:space="preserve">
    <value>Delete Voter</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Download Excel File" xml:space="preserve">
    <value>Download Excel File</value>
  </data>
  <data name="Duration (days)" xml:space="preserve">
    <value>Duration (days)</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit an Election" xml:space="preserve">
    <value>Edit an Election</value>
  </data>
  <data name="EditElectionTitle" xml:space="preserve">
    <value>Edit an Election</value>
  </data>
  <data name="EditStateTitle" xml:space="preserve">
    <value>Edit a State</value>
  </data>
  <data name="EditVoterTitle" xml:space="preserve">
    <value>Edit a Voter</value>
  </data>
  <data name="Election" xml:space="preserve">
    <value>Election</value>
  </data>
  <data name="Elections" xml:space="preserve">
    <value>Elections</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Error or Warning here!" xml:space="preserve">
    <value>Error or Warning here!</value>
  </data>
  <data name="Error Text Here" xml:space="preserve">
    <value>Error Text Here</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Future Elections" xml:space="preserve">
    <value>Future Elections</value>
  </data>
  <data name="Has Neutral Opinion?" xml:space="preserve">
    <value>Has Neutral Opinion?</value>
  </data>
  <data name="Has Voted?" xml:space="preserve">
    <value>Has Voted?</value>
  </data>
  <data name="Is Candidate" xml:space="preserve">
    <value>Is Candidate</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="List of Candidates" xml:space="preserve">
    <value>List of Candidates</value>
  </data>
  <data name="List of Elections" xml:space="preserve">
    <value>List of Elections</value>
  </data>
  <data name="List of States" xml:space="preserve">
    <value>List of States</value>
  </data>
  <data name="List of Voters" xml:space="preserve">
    <value>List of Voters</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="No Candidates Selected" xml:space="preserve">
    <value>No Candidates Selected</value>
  </data>
  <data name="Number of Candidates" xml:space="preserve">
    <value>Number of Candidates</value>
  </data>
  <data name="Please contact your System Administrator." xml:space="preserve">
    <value>Please contact your System Administrator.</value>
  </data>
  <data name="Please Select Candidates concerned by this Election" xml:space="preserve">
    <value>Please Select Candidates concerned by this Election</value>
  </data>
  <data name="Previous Elections" xml:space="preserve">
    <value>Previous Elections</value>
  </data>
  <data name="RemoveVoterWarning" xml:space="preserve">
    <value>Removing a Voter from the system will remove all his Votes, Candidates and his account to access the system as well!</value>
  </data>
  <data name="Removing an Election from the system will remove all its Votes and Candidates as well!" xml:space="preserve">
    <value>Removing an Election from the system will remove all its Votes and Candidates as well!</value>
  </data>
  <data name="Request ID:" xml:space="preserve">
    <value>Request ID:</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Results of the Election" xml:space="preserve">
    <value>Results of the Election</value>
  </data>
  <data name="rows" xml:space="preserve">
    <value>rows</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Select your choice wisely" xml:space="preserve">
    <value>Select your choice wisely</value>
  </data>
  <data name="Selected Candidates" xml:space="preserve">
    <value>Selected Candidates</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StateName" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="Step 1" xml:space="preserve">
    <value>Step1</value>
  </data>
  <data name="Step 2" xml:space="preserve">
    <value>Step 2</value>
  </data>
  <data name="Validate Election" xml:space="preserve">
    <value>Validate Election</value>
  </data>
  <data name="Validate Vote" xml:space="preserve">
    <value>Validate Vote</value>
  </data>
  <data name="VotePageTitle" xml:space="preserve">
    <value>Vote</value>
  </data>
  <data name="Voter" xml:space="preserve">
    <value>Voter</value>
  </data>
  <data name="Voters" xml:space="preserve">
    <value>Voters</value>
  </data>
  <data name="Votes" xml:space="preserve">
    <value>Votes</value>
  </data>
  <data name="Warning!" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="Welcome to weVote" xml:space="preserve">
    <value>Welcome to WeVote</value>
  </data>
  <data name="Winner" xml:space="preserve">
    <value>Winner</value>
  </data>
</root>