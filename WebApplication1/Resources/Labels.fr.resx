<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="An Election must last at least one day and less than five days" xml:space="preserve">
    <value>Une Election doit dure au minimum un jour et au maximum cinq jours</value>
  </data>
  <data name="Are you sure you want to delete this?" xml:space="preserve">
    <value>Etes vous sure de supprimer cette élément?</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Retour à la liste</value>
  </data>
  <data name="Candidates" xml:space="preserve">
    <value>Candidats</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="Create Election" xml:space="preserve">
    <value>Créer une Election</value>
  </data>
  <data name="Create New" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="CreateElectionTitle" xml:space="preserve">
    <value>Créer une Election</value>
  </data>
  <data name="CreateStateTitle" xml:space="preserve">
    <value>Create a State</value>
  </data>
  <data name="CreateVoterTitle" xml:space="preserve">
    <value>Création d'un Voteur</value>
  </data>
  <data name="Current Election" xml:space="preserve">
    <value>Election Courante</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Delete Election" xml:space="preserve">
    <value>Supprimer l' election</value>
  </data>
  <data name="Delete Voter" xml:space="preserve">
    <value>Supprimer le Voteur</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Suppression</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Détails</value>
  </data>
  <data name="Download Excel File" xml:space="preserve">
    <value>Télécharger Fichier Excel</value>
  </data>
  <data name="Duration (days)" xml:space="preserve">
    <value>Durée (jours)</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editer</value>
  </data>
  <data name="Edit an Election" xml:space="preserve">
    <value>Editer une Election</value>
  </data>
  <data name="EditElectionTitle" xml:space="preserve">
    <value>Editer une Election</value>
  </data>
  <data name="EditStateTitle" xml:space="preserve">
    <value>Editer un Etat</value>
  </data>
  <data name="EditVoterTitle" xml:space="preserve">
    <value>Editer un Voteur</value>
  </data>
  <data name="Election" xml:space="preserve">
    <value>Election</value>
  </data>
  <data name="Elections" xml:space="preserve">
    <value>Elections</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Prénom</value>
  </data>
  <data name="Future Elections" xml:space="preserve">
    <value>Prochaines Elections</value>
  </data>
  <data name="Has Neutral Opinion?" xml:space="preserve">
    <value>Avoir un Opinion Neutre?</value>
  </data>
  <data name="Has Voted?" xml:space="preserve">
    <value>A Voté?</value>
  </data>
  <data name="Is Candidate" xml:space="preserve">
    <value>Est un Candidat</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="List of Candidates" xml:space="preserve">
    <value>Liste des Candidats</value>
  </data>
  <data name="List of Elections" xml:space="preserve">
    <value>Liste des Elections</value>
  </data>
  <data name="List of States" xml:space="preserve">
    <value>Listes des Etats</value>
  </data>
  <data name="List of Voters" xml:space="preserve">
    <value>Liste des Voteurs</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="No Candidates Selected" xml:space="preserve">
    <value>Aucun Candidat sélectionné</value>
  </data>
  <data name="Number of Candidates" xml:space="preserve">
    <value>Nombre de Candidats</value>
  </data>
  <data name="Please Select Candidates concerned by this Election" xml:space="preserve">
    <value>Veuillez sélectionner les Candidats de cette Election</value>
  </data>
  <data name="Previous Elections" xml:space="preserve">
    <value>Elections Précédantes</value>
  </data>
  <data name="RemoveVoterWarning" xml:space="preserve">
    <value>La suppression d'un voteur supprimer également ses Votes, ses Candidatures et son compte!</value>
  </data>
  <data name="Removing an Election from the system will remove all its Votes and Candidates as well!" xml:space="preserve">
    <value>La suppression d'une élection supprime également ses Votes et ses Candidatures!</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Obligatoire</value>
  </data>
  <data name="Results of the Election" xml:space="preserve">
    <value>Résultas de l'Election</value>
  </data>
  <data name="rows" xml:space="preserve">
    <value>lignes</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="Select your choice wisely" xml:space="preserve">
    <value>Choisir judicieusement</value>
  </data>
  <data name="Selected Candidates" xml:space="preserve">
    <value>Candidats Sélectionnés</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Etat</value>
  </data>
  <data name="StateName" xml:space="preserve">
    <value>Etat</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistiques</value>
  </data>
  <data name="Step 1" xml:space="preserve">
    <value>Etape1</value>
  </data>
  <data name="Step 2" xml:space="preserve">
    <value>Etape 2</value>
  </data>
  <data name="Validate Election" xml:space="preserve">
    <value>Validate Election</value>
  </data>
  <data name="Validate Vote" xml:space="preserve">
    <value>Valider le Vote</value>
  </data>
  <data name="VotePageTitle" xml:space="preserve">
    <value>Voter</value>
  </data>
  <data name="Voter" xml:space="preserve">
    <value>Voteur</value>
  </data>
  <data name="Voters" xml:space="preserve">
    <value>Voteurs</value>
  </data>
  <data name="Votes" xml:space="preserve">
    <value>Votes</value>
  </data>
  <data name="Warning!" xml:space="preserve">
    <value>Caution!</value>
  </data>
  <data name="Welcome to weVote" xml:space="preserve">
    <value>Bienvenue dans WeVote</value>
  </data>
  <data name="Winner" xml:space="preserve">
    <value>Gagnant</value>
  </data>
</root>