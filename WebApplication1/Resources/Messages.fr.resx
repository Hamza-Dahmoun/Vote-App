<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A New Election should take place in a future date." xml:space="preserve">
    <value>Une nouvelle élection doit etre programmée dans le future.</value>
  </data>
  <data name="Candidate instance was not found for" xml:space="preserve">
    <value>Candidat n'est pas trouvé pour</value>
  </data>
  <data name="Candidate not found." xml:space="preserve">
    <value>Candidat n'est pas trouvé.</value>
  </data>
  <data name="candidateId cannot be null." xml:space="preserve">
    <value>candidateId ne peut pas etre null.</value>
  </data>
  <data name="Candidates" xml:space="preserve">
    <value>Candidats</value>
  </data>
  <data name="Candidates List not found." xml:space="preserve">
    <value>La liste des Candidats n'est pas trouvée.</value>
  </data>
  <data name="Cannot validate vote of null election" xml:space="preserve">
    <value>Le vote d'une élection null ne peut pas etre validé</value>
  </data>
  <data name="Cannot validate votes of empty list of candidates" xml:space="preserve">
    <value>Le vote d'une liste vide de candidats ne peut pas etre validé</value>
  </data>
  <data name="Corresponding Voter instance not found." xml:space="preserve">
    <value>l'Instance Voteur correspondante n'est pas trouvée.</value>
  </data>
  <data name="Current election not found" xml:space="preserve">
    <value>l'Election courante n'est pas trouvée</value>
  </data>
  <data name="Dashboard is null! Please contact your administrator." xml:space="preserve">
    <value>Le tableau de bord est null! Veuillez contacter l'administrateur du système.</value>
  </data>
  <data name="Data not valid, please check again." xml:space="preserve">
    <value>Données ne sont pas valides, veuillez vérifier.</value>
  </data>
  <data name="Duration (d)" xml:space="preserve">
    <value>Durée (j)</value>
  </data>
  <data name="Election instance not found." xml:space="preserve">
    <value>l'Instance Election n'est pas trouvée.</value>
  </data>
  <data name="Election is not found." xml:space="preserve">
    <value>Election n'est pas trouvé.</value>
  </data>
  <data name="Election not found" xml:space="preserve">
    <value>Election n'est pas trouvé</value>
  </data>
  <data name="electionId can not be null." xml:space="preserve">
    <value>electionId ne peut pas etre null.</value>
  </data>
  <data name="electionId cannot be null." xml:space="preserve">
    <value>electionId ne peut pas etre null.</value>
  </data>
  <data name="Elections" xml:space="preserve">
    <value>Elections</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="Error When Trying to Get The Results!" xml:space="preserve">
    <value>Erreur lors la récupération des résultats!</value>
  </data>
  <data name="Error When Validating Votes!" xml:space="preserve">
    <value>Erreur lors la validation des votes!</value>
  </data>
  <data name="First Name" xml:space="preserve">
    <value>Prénom</value>
  </data>
  <data name="futureElections.xlsx" xml:space="preserve">
    <value>prochaineElections.xlsx</value>
  </data>
  <data name="Information provided not valid" xml:space="preserve">
    <value>Informations fournis ne sont pas valid</value>
  </data>
  <data name="Last Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="N" xml:space="preserve">
    <value>N</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Neutral Candidate (Y/N)" xml:space="preserve">
    <value>Candidat Neutre (O/N)</value>
  </data>
  <data name="No candidates found for this election" xml:space="preserve">
    <value>Aucun candidat n'a été trouvé pour cette éléction</value>
  </data>
  <data name="Passed parameter 'id' can not be null" xml:space="preserve">
    <value>Le paramètre 'id' ne peut pas etre null</value>
  </data>
  <data name="previousElections.xlsx" xml:space="preserve">
    <value>ElectionsPrécédantes.xlsx</value>
  </data>
  <data name="Properties voterId and electionId can not be null." xml:space="preserve">
    <value>Propriétés voterId et electionId ne peuvent pas etre null.</value>
  </data>
  <data name="Start Date" xml:space="preserve">
    <value>Date Début</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Etat</value>
  </data>
  <data name="State not found" xml:space="preserve">
    <value>Etat n'est pas trouvée</value>
  </data>
  <data name="States" xml:space="preserve">
    <value>Etats</value>
  </data>
  <data name="The duration of the Election should be from one to five days." xml:space="preserve">
    <value>La durée d'une Election doit etre entre un et cinq jours.</value>
  </data>
  <data name="There is an existing Election during the same period." xml:space="preserve">
    <value>il existe déja une Election durant la meme période.</value>
  </data>
  <data name="Voter instance was not found for current user" xml:space="preserve">
    <value>Voteur de l'utilisateur courant n'est ppas trouvé</value>
  </data>
  <data name="Voter not found" xml:space="preserve">
    <value>Voteur n'est pas trouvé</value>
  </data>
  <data name="Voters" xml:space="preserve">
    <value>Electeurs</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>O</value>
  </data>
</root>