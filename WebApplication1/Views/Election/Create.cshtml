@model WebApplication1.Models.Election

@{
    ViewData["Title"] = "Create";
}

<style>
    #step-two{
        display:none;
    }
    .successBG{
        background-color: #d3febc;
    }
    .successText{
        color:#087360;
    }
    html{
        /*this is added so that the scrolling will be done smoothly inside the html document ... I needed scrolling when step1 is done*/
        scroll-behavior: smooth;
    }
</style>

<h1>Create Election</h1>
<div>
    <a asp-action="Index">Back to List</a>
</div>


@*IN HERE PUT STEP 1 AND STEP 2 JUST LIKE YOU DID IN THE BELFORT PROJECT*@


<hr />
<div class="row" id="step-one">
    <div class="col-12"> <h4>Step 1</h4></div>    
    
    <div class="col-md-8" id="election-input-container">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" id="election-name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="StartDate" class="control-label"></label>
            <input type="date" asp-for="StartDate" class="form-control" id="start-date-election" />
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="DurationInDays" class="control-label"></label>
            <input type="number" asp-for="DurationInDays" class="form-control" id="duration-in-days" />
            <span asp-validation-for="DurationInDays" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="HasNeutral" class="control-label"></label>
            <input type="checkbox" asp-for="HasNeutral" class="form-control" id="has-neutral" />
            <span asp-validation-for="HasNeutral" class="text-danger"></span>
        </div>
        <button type="button" id="send-election-button" title="Validate Vote">
            <i class="fa fa-rocket" aria-hidden="true"></i>
        </button>
    </div>
</div>

<br/>
<hr />
<br/>

<div id="step-two">
    <div class="col-12"> <h4>Step 1</h4></div>
    <div class="col-12"> <p>Please Select Candidates concerned by this Election</p></div>
    
    <table class="table">
        <thead>
            <tr>
                <th>
                    FirstName
                </th>
                <th>
                    LastName
                </th>
                <th>
                    StateName
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

</div>

<script>
    /**
     * 
     * SCENARIO: A USER ENTERS ALL DATA OF AN ELECION AND SUBMIT. IF IT WAS SUCCESSFULLY INSERTED WE'LL GET A RESPONSE FROM SERVER CONTAINING THE
     * ELECTION ITSELF AND A LIST OF VOTERS.
     * THE LIST OF VOTERS WILL BE DISPLAYED FOR THE USER TO SELECT WHICH ONES ARE THE CANDIDATES.
     * WHEN A USER SELECT A CANDIDATE, WE'LL USE JQUERY TO SEND THE ID OF THE ELECTION ALONG WITH THE ID OF THE VOTER SELECTED AS A CANDIDATE
     * TO THE SERVER
     * 
     * */
    //this variable is gonna be assigned the new election Id in server side
    var electionId;
    //add change event to has-neutral
    document.getElementById("has-neutral").addEventListener("click", changeHasNautral);
    //add click event to send-election-button
    document.getElementById("send-election-button").addEventListener("click", sendElection);
    var hasNeutral = false;

    //this function change the value of the variable hasNeutral according to the user checking the checkbox #has-neutral
    function changeHasNautral() {
        if (event.target.checked) {
            hasNeutral = true;
        }
        else {
            hasNeutral = false;
        }
    }

    //this function sends the new election object (without the list of the concerned voters & candidates) to the server to be stored in the db (step1)
    function sendElection() {    
        var newElection =
        {
            Name: document.getElementById("election-name").value,
            StartDate: document.getElementById("start-date-election").value,
            DurationInDays: parseInt(document.getElementById("duration-in-days").value),
            HasNeutral: hasNeutral
        };
        //alert(JSON.stringify(newElection));
    //Send the JSON object Election to Controller using AJAX.
    $.ajax({
        type: "POST",
        url: "/Election/ValidateElection",
        data: JSON.stringify(newElection),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        error: function () {
            alert("error");
        },
        success: function (response) {
            //'response' represents the object returned from the api which is the Election object newly stored in the db
            console.log(response);
            //alert("success" + response);
            electionId = response.Election.Id;
            disableAllInputs();
            changeBgColor();
            displayVoters(response.Voters);
            scrollDown();
            //window.location.href = "Home/Index";
        }
    });
    }
    //this function disable all the new Election inputs, and hide the submit button. It is called after storing this new Election successfully
    function disableAllInputs() {
        //console.log("disabling inputs started");
        let election_inputs = document.getElementById("election-input-container").querySelectorAll("input");
        for (let i = 0; i < election_inputs.length; i++) {
            //console.log(election_inputs[i]);
            election_inputs[i].disabled = "true";
        }
        document.getElementById("send-election-button").style.display = "none";
        //console.log("disabling inputs done");
    }
    function changeBgColor() {
        let stepOne = document.getElementById("step-one");
        console.log(stepOne);
        stepOne.classList.add("successBG");
        stepOne.classList.add("successText");
    }
    function scrollDown() {
        //this function scroll down to step2
        document.getElementById("step-two").scrollIntoView();
    }
    function displayVoters(voters) {
        console.log(voters);
        var tableBody = document.getElementsByTagName("tbody")[0];
        for (let i = 0; i < voters.length; i++) {
            let tdFirstName = document.createElement("td");
            tdFirstName.innerText = voters[i].FirstName;
            let tdLastName = document.createElement("td");
            tdLastName.innerText = voters[i].LastName;
            let tdState = document.createElement("td");
            tdState.innerText = voters[i].StateName;

            let tdButton = document.createElement("td");
            let addCandidateButton = document.createElement("a");
            addCandidateButton.innerHTML = "Select as Candidate";
            addCandidateButton.style.cursor = "pointer";
            addCandidateButton.setAttribute("voterid", voters[i].Id);
            addCandidateButton.addEventListener("click", sendCandidate);
            tdButton.appendChild(addCandidateButton);

            let removeCandidateButton = document.createElement("a");
            removeCandidateButton.innerHTML = "Remove Candidate";
            removeCandidateButton.style.cursor = "pointer";
            removeCandidateButton.style.color = "red";
            removeCandidateButton.style.display = "none";
            removeCandidateButton.setAttribute("voterid", voters[i].Id);
            removeCandidateButton.addEventListener("click", removeCandidate);
            tdButton.appendChild(removeCandidateButton);


            let voterRow = document.createElement("tr");
            voterRow.appendChild(tdFirstName);
            voterRow.appendChild(tdLastName);
            voterRow.appendChild(tdState);
            voterRow.appendChild(tdButton);

            tableBody.appendChild(voterRow);
        }
        document.getElementById("step-two").style.display = "block";
    }
    function sendCandidate(event) {
        //console.log(event);
        //console.log("voterId: " + event.target.getAttribute("voterid") + " -- electionId " + electionId);
        let voterid = event.target.getAttribute("voterid");
        console.log(voterid);
        console.log(JSON.stringify(voterid));
        console.log(electionId);
        console.log(JSON.stringify(electionId));
        console.log(JSON.stringify({ electionId: electionId, voterId: voterid }));
        //Send the JSON data of voterId and electionId to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: "/Election/AddCandidates",
            data: JSON.stringify({ electionId: electionId, voterId: voterid }),//JSON.stringify(newElection),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        error: function () {
            alert("error");
        },
        success: function (response) {
            //'response' represents the object returned from the api which is the Election object newly stored in the db
            console.log(response);
            alert("success" + response);
            
            
            //window.location.href = "Home/Index";
        }
    });
    }
    function displayRemoveCandidateButton() {
        let buttons = event.target.parentElement.querySelectorAll("a");
        for (let i = 0; i < buttons.length; i++) {
            if (buttons[i].style.display == "none")
                buttons[i].style.display == "block";
            if (buttons[i].style.display == "block")
                buttons[i].style.display == "none";
        }
    }
    function removeCandidate() {
        //this function remove the relation between election and candidates
        console.log("Hi I remove candidates");
    }
    
</script>