@model IEnumerable<WebApplication1.Models.Election>

@{ /*Importing namespace Microsoft.Extensions.Localization; */}
@using Microsoft.Extensions.Localization;

@{/*Injecting IStringLocalizer for Labelsc.s shared resource in variable named labelsLocalizer */}
@inject IStringLocalizer<Labels> labelsLocalizer

@{
    ViewData["Title"] = labelsLocalizer["List of Elections"];
    int electionsCount = ViewBag.electionsCount;
}
<partial name="_datatablesStyle" />
<partial name="_tablesButtonsStyling" />
<h1>@labelsLocalizer["List of Elections"]</h1>

<p>
    <a asp-action="Create">@labelsLocalizer["Create New"]</a>
</p>

<partial name="_downloadExcelStyle" />
<form class="excel-downlod-container" asp-action="ExportToExcel">
    <button type="submit" title=@labelsLocalizer["Download Excel File"]>
        <i class="fa fa-file-excel-o" aria-hidden="true"></i> @electionsCount @labelsLocalizer["rows"]
    </button>
</form>
<table class="table" id="elections-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DurationInDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HasNeutral)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Candidates)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th>
                    @Html.DisplayFor(model => item.Name)
                </th>
                <th>
                    @Html.DisplayFor(model => item.StartDate)
                </th>
                <th>
                    @Html.DisplayFor(model => item.DurationInDays)
                </th>
                <th>
                    @Html.DisplayFor(model => item.HasNeutral)
                </th>
                <th>
                    @Html.DisplayFor(model => item.Candidates.Count)
                </th>
                <td>
                    @*display Edit button only when this Election is in future*@
                    @if (item.StartDate > DateTime.Now)
                    {
                        <a class='table-button button-edit' title=@labelsLocalizer["Edit"] asp-action="Edit" asp-route-id="@item.Id"><i class='fa fa-pencil'></i></a>
                    }
                    <a class='table-button button-details' title=@labelsLocalizer["Details"] asp-action="Details" asp-route-id="@item.Id"><i class='fa fa-file-text'></i></a>

                    <a class='table-button button-delete' title=@labelsLocalizer["Delete"] asp-action="Delete" asp-route-id="@item.Id"><i class='fa fa-trash'></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<partial name="_jQuery" />
<partial name="_datatablesScript" />

<script>
    //now lets make it a jquery datatables
    document.addEventListener("DOMContentLoaded", function () { $('#elections-table').DataTable() });
</script>