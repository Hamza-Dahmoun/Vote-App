@model WebApplication1.Models.ViewModels.VoterStateViewModel

@{
    ViewData["Title"] = "Create";
}
@*IN THIS VOEW WE'ARE GOING TO DISPLAY FEW INPUTS RELATED TO VOTER AND A LIST OF STATES FOR THE USER TO SELECT ONE OF THEM*@

<partial name="_select2Style" />

<h1>Create</h1>

<h4>VoterStateViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StateID" class="control-label">State</label>
                <select asp-for="StateID" class="form-control" id="stateId">
                    
                </select>
                @*<select asp-for="StateID" class="form-control" size="1"
                        asp-items="@(new SelectList(  Model.States, "Id", "Name"))" id="stateId">
                    <option>Select a State</option>
                </select>*@
                @*HOW SELECTLIST IN RAZOR WORKS?
        <select
            asp-for="AuthorId" (the selected value will be considered as AuthorId)
            size="1"
            asp-items="@(
            new SelectList(
            ListOfObjects,
            "object property to dislplay as 'value'",
            "object property to display as 'text'"
            ))"
            >*@
                <span asp-validation-for="States" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<partial name="_jQuery" />
<partial name="_select2Script" />

<script>
    /*
     * $(function () {
            //Init Select2 compoenent on stateId element
            $("#stateId").select2();
    });
    */
    $(function () {
        $("#stateId").select2({
            ajax: {
                url: "/Voter/States",
                dataType: 'json',
                delay: 250,//wait for 250ms after user stopped tying, then send the request to the server
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    // parse the results into the format expected by Select2
                    // since we are using custom formatting functions we do not need to
                    // alter the remote JSON data, except to indicate that infinite
                    // scrolling can be used
                    params.page = params.page || 1;

                    return {
                        results: data.items,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'Search a State',
            minimumInputLength: 1
        });
    })
</script>