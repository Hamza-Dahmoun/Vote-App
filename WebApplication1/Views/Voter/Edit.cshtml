@model WebApplication1.Models.ViewModels.VoterStateViewModel

@{ /*Importing namespace Microsoft.Extensions.Localization; */}
@using Microsoft.Extensions.Localization;

@{/*Injecting IStringLocalizer for Labelsc.s shared resource in variable named labelsLocalizer */}
@inject IStringLocalizer<Labels> labelsLocalizer


@{
    ViewData["Title"] = labelsLocalizer["Edit"];
    var BusinessMessage = (WebApplication1.Business.BusinessMessage)ViewBag.BusinessMessage;
}



<partial name="_select2Style" />

<h1>@labelsLocalizer["Edit"]</h1>

<h4>@labelsLocalizer["Voter"]</h4>
<hr />
<div class="row">
    @if (BusinessMessage != null)
    {
        <div class="col-md-12">
            @if (BusinessMessage.Type == "Error")
            {
                <p class="text-danger">@BusinessMessage.Text</p>
            }
            else if (BusinessMessage.Type == "Warning")
            {
                <p class="text-warning">@BusinessMessage.Text</p>
            }
            else if (BusinessMessage.Type == "Success")
            {
                <p class="text-success">@BusinessMessage.Text</p>
            }
        </div>
    }

    @*THE BELOW CONDITION IS NECESSARY BECAUSE THERE IS ONE CASE WHEN I RETURNED THE VIEW WITH A NULL MODEL WHICH IS WHEN I THREW A BUSINESSEXCEPTION
        BECAUSE THE PASSED PARAMTER 'ID' WAS NULL OR THE VOTER WAS NOT FOUND*@
    @if (Model != null)
    {
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <!--THIS IS NOT GONNA BE DISPLAYED FOR USER BUT IS MANDATORY IN THE FORM SO THAT THE OBJECT SENT INTO "EDITVOTER" ACTION OF VOTERCONTROLLER WILL HOLD CORRECT DATA-->
                <input asp-for="Id" type="hidden" />
                <div class="form-group">
                    <label asp-for="FirstName" class="control-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StateID" class="control-label"></label>
                    <!--THIS LIST WILL DISPPLAY A LIST OF STATES, THE ONE RELATED TO THE VOTER WILL BE SELECTED? THEN IT'S UP TO THE USER IN EDITION WHAT TO ELECT-->
                    <select id="stateId" asp-for="StateID" class="form-control" size="1" asp-items="@(new SelectList(Model.States, "Id", "Name"))">
                        <!--IF THE VOTER TO EDIT HAS NO STATE (NEUTRAL VOTE) LETS NOT BIND StateId, AND BIND ONLY THE ABOVE LIST OF STATES-->
                        @if (Model.StateID != null)
                        {
                            <option asp-for="StateID"></option>
                        }

                    </select>
                    <span asp-validation-for="StateID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value=@labelsLocalizer["Save"] class="btn btn-primary" />
                </div>
            </form>
        </div>
    }

</div>

<div>
    <a asp-action="Index">@labelsLocalizer["Back to List"]</a>
</div>

<partial name="_jQuery" />
<partial name="_select2Script" />
<partial name="_select2StatesListScript" />
<partial name="_jQueryValidationScripts" />